name: Deploy bot

on: 
  push:
    branches: ["master"]
  pull_request:
    types:
      - closed
      - opened 
      - edited
      - reopened
      - synchronize
    branches: ["master"]

env:
  DOCKER_IMAGE_BASE: ghcr.io/${{github.repository}}

jobs:
  test:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.9' # repeat
      - name: Install dependencies
        run: python -m pip install -r ./requirements/test.txt
      - name: Run tests with pytest
        run: pytest --version # stub

  build:
    runs-on: ubuntu-latest
    # needs: test
    outputs:
      DOCKER_IMAGE: ${{steps.build_image.outputs.DOCKER_IMAGE}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11.9' # repeat
      - name: Build image
        id: build_image
        run: |
          DOCKER_IMAGE=${{env.DOCKER_IMAGE_BASE}}:${{hashFiles('./requirements/prod.txt')}} &&
          echo DOCKER_IMAGE=$DOCKER_IMAGE | tee -a $GITHUB_OUTPUT $GITHUB_ENV &&
          docker build --build-arg BUILD=dev -t $DOCKER_IMAGE .
      - name: Login to Github Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login --username $GITHUB_ACTOR --password-stdin ghcr.io
      - name: Push image to GHCR
        run: docker push $DOCKER_IMAGE # replace tag with env(?)

  stage_deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKER_IMAGE_NAME: ${{needs.build.outputs.DOCKER_IMAGE}}
      TELEGRAM_STAGE_TOKEN: ASD
      DB_URI: EMPTY
      # THERE IS NO .env file, should handle it here
    steps:
      # - name: Connect to remote server
      #   run: ssh -o StrictHostKeyChecking=no ${{secrets.PROD_HOST}} ...
      - uses: actions/checkout@v4 # redundant files, needs docker-compose.yml only
      - name: Login to Github Container Registry
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login --username $GITHUB_ACTOR --password-stdin ghcr.io
      - name: Pull image from GHCR
        run: docker pull $DOCKER_IMAGE_NAME
      - name: Run app
        run: |
          echo $DOCKER_IMAGE_NAME env && 
          docker compose -f docker-compose.yml down && 
          docker compose -f docker-compose.yml up -d
      - name: Run performance tests
        run: echo Run performance tests

  production_deploy:
    # run if it updates master branch
    if: github.event.pull_request.merged || github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: stage_deploy
    environment: production
    steps:
      - name: Connect to remote server
        run: ssh -o StrictHostKeyChecking=no ${{secrets.PROD_HOST}} ...
      - name: Login to Github Container Registry
        run: echo $GHCR_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin ghcr.io
      - name: Pull image from GHCR
        run: docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}
      - name: Run app
        run: docker compose -f docker-compose.yml down && docker compose -f docker-compose.yml up -d


  
      
      

          


